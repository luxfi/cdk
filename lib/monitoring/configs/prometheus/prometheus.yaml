global:
  scrape_interval: 60s
  scrape_timeout: 20s
  evaluation_interval: 15s
  external_labels:
    container: ${HOSTNAME}
rule_files:
  - "/etc/prometheus-rules/*.rules"

scrape_configs:
  - job_name: "prometheus"
    scheme: "http"
    static_configs:
      - targets: ["localhost:9090"]

  - job_name: "kube-state-metrics"
    static_configs:
      - targets: ["kube-state-metrics.kube-system:8080"]

  - job_name: "kubernetes-nodes"
    # Default to scraping over https. If required, just disable this or change to
    # `http`.
    scheme: http
    # This TLS & bearer token file config is used to connect to the actual scrape
    # endpoints for cluster components. This is separate to discovery auth
    # configuration (`in_cluster` below) because discovery & scraping are two
    # separate concerns in Prometheus.
    #tls_config:
    #  ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    # If your node certificates are self-signed or use a different CA to the
    # master CA, then disable certificate verification below. Note that
    # certificate verification is an integral part of a secure infrastructure
    # so this should only be disabled in a controlled environment. You can
    # disable certificate verification by uncommenting the line below.
    #
    # insecure_skip_verify: true
    #bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    kubernetes_sd_configs:
      - api_servers:
          - https://kubernetes.default.svc
        in_cluster: true
        role: node
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      # Use insecure read-only HTTP 10255 port
      # More info is here: https://github.com/kayrus/kubelet-exploit
      - source_labels: [__address__]
        regex: "(.*):10250"
        replacement: "${1}:10255"
        target_label: __address__
    # Backward compatibility for Kubernetes 1.3 dashboards
    metric_relabel_configs:
      - source_labels: [io_kubernetes_container_name, container_name]
        action: replace
        regex: (.*);(.*)
        replacement: "${1}${2}"
        target_label: io_kubernetes_container_name
      - source_labels: [kubernetes_pod_name, pod_name]
        action: replace
        regex: (.*);(.*)
        replacement: "${1}${2}"
        target_label: kubernetes_pod_name
      - source_labels: [kubernetes_pod_name]
        action: replace
        target_label: io_kubernetes_pod_name
  - job_name: "kubernetes-node-exporter"
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    kubernetes_sd_configs:
      - api_servers:
          - https://kubernetes.default.svc
        in_cluster: true
        role: node
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - source_labels: [__meta_kubernetes_role]
        action: replace
        target_label: kubernetes_role
      - source_labels: [__address__]
        regex: "(.*):10250"
        replacement: "${1}:9100"
        target_label: __address__
      - source_labels: [__meta_kubernetes_node_label_kubernetes_io_hostname]
        target_label: __instance__
      # set "name" value to "job"
      - source_labels: [job]
        regex: "kubernetes-(.*)"
        replacement: "${1}"
        target_label: name

  - job_name: "kubernetes-cluster"
    # Default to scraping over https. If required, just disable this or change to
    # `http`.
    scheme: https
    # This TLS & bearer token file config is used to connect to the actual scrape
    # endpoints for cluster components. This is separate to discovery auth
    # configuration (`in_cluster` below) because discovery & scraping are two
    # separate concerns in Prometheus.
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      # If your node certificates are self-signed or use a different CA to the
      # master CA, then disable certificate verification below. Note that
      # certificate verification is an integral part of a secure infrastructure
      # so this should only be disabled in a controlled environment. You can
      # disable certificate verification by uncommenting the line below.
      #
      # insecure_skip_verify: true
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    kubernetes_sd_configs:
      - api_servers:
          - https://kubernetes.default.svc
        in_cluster: true
        role: apiserver

  - job_name: "kubernetes-service-endpoints"
    kubernetes_sd_configs:
      - role: service
        namespaces:
          names:
            - monitoring
            - ava
    relabel_configs:
      - source_labels:
          [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      # - source_labels:
      #     [__meta_kubernetes_service_annotation_prometheus_io_scheme]
      #   action: replace
      #   target_label: __scheme__
      #   regex: (https?)
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels:
          [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        separator: ;
        regex: ([^:]+)(?::\d+)?;(\d+)
        target_label: __address__
        replacement: $1:$2
        action: replace

      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
    # - source_labels: [__meta_kubernetes_namespace]
    #   separator: ;
    #   regex: (.*)
    #   target_label: namespace
    #   replacement: $1
    #   action: replace
    # - source_labels: [__meta_kubernetes_namespace]
    #   action: replace
    #   target_label: kubernetes_namespace
    # - source_labels: [__meta_kubernetes_service_name]
    #   action: replace
    #   target_label: kubernetes_name

  - job_name: "kubernetes-services"
    metrics_path: /probe
    params:
      module: [http_2xx]
    kubernetes_sd_configs:
      - api_servers:
          - "https://kubernetes.default.svc"
        in_cluster: true
        role: service
    relabel_configs:
      - source_labels:
          [__meta_kubernetes_service_annotation_prometheus_io_probe]
        action: keep
        regex: true
      - source_labels: [__address__]
        target_label: __param_target
      - target_label: __address__
        replacement: blackbox
      - source_labels: [__param_target]
        target_label: instance
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_service_namespace]
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        target_label: kubernetes_name

  - job_name: ava-exporter
    scrape_interval: 15s
    scrape_timeout: 10s
    metrics_path: /metrics
    scheme: http
    kubernetes_sd_configs:
      - role: pod
        follow_redirects: true
        namespaces:
          names:
            - monitoring
            - ava
            - default
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_avalance_scrape]
        action: keep
        regex: true
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        source_labels: [__param_target]
        replacement: $1:9001

  - job_name: "kubernetes-pods"
    kubernetes_sd_configs:
      - api_servers:
          - "https://kubernetes.default.svc"
        in_cluster: true
        role: pod
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels:
          [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: (.+):(?:\d+);(\d+)
        replacement: ${1}:${2}
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_pod_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name
